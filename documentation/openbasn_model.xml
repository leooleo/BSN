<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>const int SIZE = 10;    //FIFOQueue size

// Container datatype IDs
const int c_acknowledge = 871;
const int c_request = 872;
const int c_sensornodedata = 873;

typedef struct  {
    int[0,SIZE] len;
    int list[SIZE+1];
} FIFOQueue;

chan pulse, pulse_ack, kill_module;

// Coloca um elemento no final da fila
void enqueue(FIFOQueue buffer, int element){
    buffer.list[buffer.len++] = element;
}

// Remove e retorna um elemento do comeco da fila
int dequeue(FIFOQueue buffer) {
    
    int tail = buffer.list[buffer.len-1];
    int i = 0;
    buffer.len-=1;
    while (i &lt; buffer.len) {
        buffer.list[i] = buffer.list[i+1];
        i++;
    }
    buffer.list[i] = 0;

    return tail;
}

int tail(FIFOQueue buffer){
    return buffer.list[buffer.len-1];
}

bool isEmpty(FIFOQueue buffer){
    return (buffer.list[0]==0)?true:false;
}</declaration>
	<template>
		<name x="5" y="5">odsupercomponent</name>
		<declaration>clock x;
int y;</declaration>
		<location id="id0" x="-969" y="-731">
			<name x="-1003" y="-714">bodyhub</name>
		</location>
		<location id="id1" x="-892" y="-969">
			<name x="-902" y="-1003">wait</name>
		</location>
		<location id="id2" x="-893" y="-833">
			<name x="-1028" y="-867">odsupercomponent</name>
			<label kind="invariant" x="-969" y="-850">x&lt;=1</label>
		</location>
		<location id="id3" x="-1088" y="-833">
			<name x="-1098" y="-867">start</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-952" y="-790">pulse_ack?</label>
			<label kind="assignment" x="-952" y="-773">y+=1</label>
			<nail x="-960" y="-748"/>
			<nail x="-960" y="-790"/>
			<nail x="-901" y="-790"/>
			<nail x="-901" y="-816"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="-1020" y="-799">x&gt;=0 
&amp;&amp; 
y==0</label>
			<label kind="synchronisation" x="-969" y="-816">pulse!</label>
			<nail x="-909" y="-824"/>
			<nail x="-909" y="-799"/>
			<nail x="-969" y="-799"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-858" y="-935">y==1</label>
			<nail x="-858" y="-833"/>
			<nail x="-858" y="-969"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-943" y="-943">x&gt;=1</label>
			<label kind="assignment" x="-943" y="-926">(x:=0),
(y:=0)</label>
			<nail x="-892" y="-926"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="assignment" x="-1054" y="-833">x:=0</label>
		</transition>
	</template>
	<template>
		<name>sensornodemodule</name>
	</template>
	<template>
		<name>bodyhubmodule</name>
		<declaration>FIFOQueue m_buffer;
int container;</declaration>
		<location id="id4" x="-442" y="-314">
			<name x="-484" y="-323">wait</name>
		</location>
		<location id="id5" x="-672" y="-264">
			<name x="-688" y="-246">end</name>
		</location>
		<location id="id6" x="-544" y="-272">
			<name x="-570" y="-255">teardown</name>
		</location>
		<location id="id7" x="-552" y="-357">
			<name x="-578" y="-391">setup</name>
		</location>
		<location id="id8" x="-672" y="-339">
			<name x="-688" y="-374">start</name>
		</location>
		<location id="id9" x="-255" y="-59">
			<name x="-348" y="-93">processSensorNodeData</name>
		</location>
		<location id="id10" x="-322" y="119">
			<name x="-374" y="136">processRequest</name>
		</location>
		<location id="id11" x="-161" y="-212">
			<name x="-153" y="-204">notrunning</name>
		</location>
		<location id="id12" x="-425" y="-42">
		</location>
		<location id="id13" x="-314" y="-263">
			<name x="-348" y="-297">running</name>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-518" y="-272">kill_module?</label>
			<nail x="-467" y="-272"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-348" y="-340">pulse_ack!</label>
			<nail x="-272" y="-314"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-408" y="-280">pulse?</label>
			<nail x="-416" y="-263"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<nail x="-468" y="-356"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<nail x="-595" y="-238"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<nail x="-612" y="-374"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-561" y="-161">container!=873 
||  container!=872</label>
			<nail x="-425" y="-204"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<nail x="-229" y="-144"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<nail x="-212" y="59"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="-399" y="-25">container==873</label>
			<nail x="-357" y="-17"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-459" y="59">container==872</label>
			<nail x="-424" y="68"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-374" y="-178">!isEmpty(m_buffer)</label>
			<label kind="assignment" x="-416" y="-161">container:=dequeue(m_buffer)</label>
			<nail x="-348" y="-110"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="guard" x="-280" y="-238">isEmpty(m_buffer)</label>
			<nail x="-280" y="-212"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Process = Template();

// List one or more processes to be composed into a system.
system odsupercomponent,bodyhubmodule;
    </system>
	<queries>
	</queries>
</nta>
